# Soal Untuk Hafiz, Rizal, Auwfar

	#1
	
	Buat function yang isinya adalah mengubah array assosiatif


	$arr = [
		'Piring' => 'Budi',
		'Sendok' => 'Seno',
		'Gelas'  => 'Budi',
	];

	jadi nanti output yang harus keluar adalah sebagai berikut :

	$arr_out = [
		'Budi' => ['Piring', 'Gelas'],
		'Seno' => ['Sendok'],
	];

	Gunakan perulangan di dalam function.

	1. Rizal
	2. Auwfar

	#2 

	$arr = [
		'alamat' => [
			'budi' 	=> 'kalimantan',
			'thoni' => 'malang',
			'jarwo' => 'surabaya',
		],
		'hobi' => [
			'thoni' => 'sepak bola',
			'jarwo' => 'nonton tv',
			'budi' => 'baca buku',
		],
	];

	jadi nanti output yang harus keluar adalah sebagai berikut :

	$arr_out = [
		'budi' => [
			'alamat' => 'kalimantan',
			'hobi'	=> 'baca buku',
		],
		'thoni' => [
			'alamat' => 'malang',
			'hobi'	=> 'sepak bola'
		],
		'jarwo' => [
			'alamat' => 'surabaya',
			'hobi'	=> 'nonton tv'
		],
	];

	1. Rizal
	2. Auwfar


	#3

	$arr = [
		'alamat' => [
			'budi' 	=> 'kalimantan',
			'thoni' => 'malang',
			'jarwo' => 'surabaya',
		],
		'hobi' => [
			'thoni' => 'sepak bola',
			'jarwo' => 'nonton tv',
			'budi' => 'baca buku',
		],
		'nilai' => [
			'thoni' => 80,
			'jarwo' => 90,
			'budi' => 40,
		]
	];

	jadi nanti output yang harus keluar adalah sebagai berikut :

	*untuk nilai rumusnya adalah n_o / sum(nilai)

	$arr_out = [
		'budi' => [
			'alamat' => 'kalimantan',
			'hobi'	=> 'baca buku',
			'nilai'	=> '0.19',
		],
		'thoni' => [
			'alamat' => 'malang',
			'hobi'	=> 'sepak bola',
			'nilai'	=> '0.38'
		],
		'jarwo' => [
			'alamat' => 'surabaya',
			'hobi'	=> 'nonton tv',
			'nilai'	=> '0.42'
		],
	];

	1. Auwfar
	2. Rizal

	#4

	$arr = [
		'a' =>[
			'child' => []
		],
		'b' => [
			'child' => []
		]
	];

	buat fungsi yang otomatis mendeteksi bawah node diatas memiliki child atau tidak jika tidak punya anak maka secara otomatis menambahkan anak pada node tersebut.

	contoh :

	buatAnak();

	- cek masing masing node, ternyata node a tidak memiliki anak, maka secara otomatis node a ditambahkan anak.

	$arr = [
		'a' =>[
			'child' => [
				'a' => [
					'child' => []
				]
			]
		],
		'b' => [
			'child' => []
		]
	];

	#5

	$arr = [
		'badak',
		'singa',
		'kuda',
		'kucing',
		'cacing',
		'lalat',
	]

	Buat fungsi search() untuk memfilter inputan : misal

	input = ku

	output = 

	$arr = [
		'kuda',
		'kucing',
	]

	1. Rizal
	2. Auwfar

	#5

	$arr = [
		'badak' => 1,
		'singa' => 2,
		'kuda' => 3,
		'kucing' => 4,
		'cacing' => 5,
		'lalat' => 6,
	]

	Buat fungsi search() untuk memfilter inputan : misal

	input = ku

	output = 

	1. kuda - 3
	2. kucing - 4

	1. Auwfar
	2. Rizal

	#6

	buat class Kendaraan() yang memiliki function :
	-isiBensin()
	-jalan()

	dengan persyaratan memiliki nilai bensin = 10, ketika jalan(), bensin secara otomatis berkurang 1, dan ketika isiBensin() secara otomatis bertambah 2;

	output :

	jalan() --> bensin tinggal 9
	jalan() --> bensin tinggal 8
	isiBensin() --> bensin diisi jadi 10

	1. Rizal
	2. Auwfar

	#7

	

